name: mirrorduo
  
shape_meta: &shape_meta
  # acceptable types: rgb, low_dim
  obs:
    agentview_image_tcp_centered:
      shape: [3, 84, 84]
      type: rgb
    robot0_eye_in_hand_image:
      shape: [3, 84, 84]
      type: rgb
    robot0_eef_delta_pos:
      shape: [3]
    robot0_eef_delta_rot:
      shape: [6]
    robot0_gripper_qpos:
      shape: [2]
  action: 
    shape: [10]

env_runner:
  _target_: mirrorduo.env_runner.mirrorduo_robomimic_image_runner.MirrorDuoRobomimicImageRunner
  env_name: ${env_name}
  dataset_path: ${dataset_path}
  shape_meta: *shape_meta
  n_train: 6
  n_train_vis: 0
  train_start_idx: 0
  n_test: 50
  n_test_vis: 0
  test_start_seed: 100000
  max_steps: ${get_max_steps:${task_name}}
  n_obs_steps: ${n_obs_steps}
  n_action_steps: ${n_action_steps}
  render_obs_key: 'agentview_image'
  fps: 10
  crf: 22
  past_action: ${past_action_visible}
  tqdm_interval_sec: 1.0
  n_envs: ${n_envs}
  # mirrorduo params
  action_mode: ${action_mode}

dataset:
  _target_: ${dataset}
  n_demo: ${n_demo}
  shape_meta: *shape_meta
  dataset_path: ${dataset_path}
  horizon: ${horizon}
  pad_before: ${eval:'${n_obs_steps}-1+${n_latency_steps}'}
  pad_after: ${eval:'${n_action_steps}-1'}
  n_obs_steps: ${dataset_obs_steps}
  rotation_rep: 'rotation_6d'
  use_legacy_normalizer: False
  use_cache: True
  seed: 42
  val_ratio: 0.02
  # mirrorduo params
  action_mode: ${action_mode}
  enable_mirror: ${enable_mirror} # changes how the normalizer behaves